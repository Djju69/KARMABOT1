#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞ Telegram –±–æ—Ç–∞ –Ω–∞ Railway.
"""
import os
import sys
import json
import logging
import requests
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class TelegramBotSetup:
    def __init__(self):
        self.bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
        self.webhook_secret = os.getenv('TELEGRAM_WEBHOOK_SECRET')
        self.railway_url = os.getenv('RAILWAY_STATIC_URL')
        
        if not all([self.bot_token, self.railway_url]):
            logger.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏ RAILWAY_STATIC_URL")
            sys.exit(1)
            
        if not self.webhook_secret:
            self.webhook_secret = os.urandom(16).hex()
            logger.warning(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á: {self.webhook_secret}")
    
    def setup_webhook(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–µ–±—Ö—É–∫ –¥–ª—è Telegram –±–æ—Ç–∞."""
        webhook_url = f"{self.railway_url.rstrip('/')}/webhooks/telegram"
        
        logger.info(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –±–æ—Ç–∞...")
        logger.info(f"Webhook URL: {webhook_url}")
        
        url = f"https://api.telegram.org/bot{self.bot_token}/setWebhook"
        
        try:
            response = requests.post(
                url,
                data={
                    'url': webhook_url,
                    'secret_token': self.webhook_secret,
                    'drop_pending_updates': 'true',
                    'allowed_updates': json.dumps(["message", "callback_query", "inline_query"])
                },
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    logger.info("‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
                    logger.info(f"–û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description')}")
                    return True
                else:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: {result.get('description')}")
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}: {response.text}")
        
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞: {str(e)}")
        
        return False
    
    def check_webhook(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞."""
        url = f"https://api.telegram.org/bot{self.bot_token}/getWebhookInfo"
        
        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    webhook_info = result.get('result', {})
                    logger.info("\n–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞:")
                    logger.info(f"URL: {webhook_info.get('url')}")
                    logger.info(f"–û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count')}")
                    
                    if webhook_info.get('last_error_date'):
                        logger.warning(f"–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—à–∏–±–∫–∏: {webhook_info.get('last_error_date')}")
                        logger.warning(f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {webhook_info.get('last_error_message')}")
                    
                    return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ–±—Ö—É–∫–∞: {str(e)}")
        
        return False
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
        logger.info("üöÄ –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞")
        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {self.railway_url}")
        
        if self.setup_webhook():
            self.check_webhook()
            
            logger.info("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            logger.info("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤ –µ–º—É –∫–æ–º–∞–Ω–¥—É /start")
        else:
            logger.error("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ–±—Ö—É–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
            sys.exit(1)

if __name__ == "__main__":
    try:
        setup = TelegramBotSetup()
        setup.run()
    except KeyboardInterrupt:
        logger.info("\n–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
