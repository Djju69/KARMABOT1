#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""
import os
import asyncio
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def add_test_cards():
    """–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏"""
    logger.info("üîç –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏...")
    
    try:
        from core.database.db_v2 import db_v2, Card, Partner
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        test_partner = db_v2.get_or_create_partner(999999998, "–¢–µ—Å—Ç–æ–≤—ã–π –ü–∞—Ä—Ç–Ω–µ—Ä")
        logger.info(f"‚úÖ –ü–∞—Ä—Ç–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω: ID={test_partner.id}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        test_cards = [
            {
                'title': 'üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω "–ó–æ–ª–æ—Ç–æ–π –î—Ä–∞–∫–æ–Ω"',
                'description': '–ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –°–≤–µ–∂–∏–µ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã –∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –±–ª—é–¥–∞.',
                'address': '—É–ª. –ù–≥—É–µ–Ω –•—é—ç, 123, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 123 456',
                'discount_text': '–°–∫–∏–¥–∫–∞ 15% –Ω–∞ –≤—Å–µ –±–ª—é–¥–∞',
                'category_id': 1,  # –†–µ—Å—Ç–æ—Ä–∞–Ω—ã
                'status': 'approved'
            },
            {
                'title': 'üßò‚Äç‚ôÄÔ∏è SPA "–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –†–∞–π"',
                'description': '–†–æ—Å–∫–æ—à–Ω—ã–π SPA-—Ü–µ–Ω—Ç—Ä —Å –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ. –ú–∞—Å—Å–∞–∂, —Å–∞—É–Ω–∞, –±–∞—Å—Å–µ–π–Ω.',
                'address': '—É–ª. –ß–∞–Ω –§—É, 456, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 234 567',
                'discount_text': '–ú–∞—Å—Å–∞–∂ –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–∞–∫–µ—Ç–∞',
                'category_id': 2,  # SPA
                'status': 'approved'
            },
            {
                'title': 'üèçÔ∏è –ê—Ä–µ–Ω–¥–∞ –±–∞–π–∫–æ–≤ "–°–∫–æ—Ä–æ—Å—Ç—å"',
                'description': '–ü—Ä–æ–∫–∞—Ç –º–æ—Ç–æ—Ü–∏–∫–ª–æ–≤ –∏ —Å–∫—É—Ç–µ—Ä–æ–≤. –ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞.',
                'address': '—É–ª. –•—É–Ω–≥ –í—É–æ–Ω–≥, 789, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 345 678',
                'discount_text': '–°–∫–∏–¥–∫–∞ 20% –ø—Ä–∏ –∞—Ä–µ–Ω–¥–µ –Ω–∞ –Ω–µ–¥–µ–ª—é',
                'category_id': 3,  # –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
                'status': 'approved'
            },
            {
                'title': 'üè® –û—Ç–µ–ª—å "–ú–æ—Ä—Å–∫–æ–π –ë—Ä–∏–∑"',
                'description': '4-–∑–≤–µ–∑–¥–æ—á–Ω—ã–π –æ—Ç–µ–ª—å –Ω–∞ –ø–µ—Ä–≤–æ–π –ª–∏–Ω–∏–∏. –í—Å–µ –Ω–æ–º–µ—Ä–∞ —Å –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ.',
                'address': '—É–ª. –ß–∞–Ω –§—É, 321, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 456 789',
                'discount_text': '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏',
                'category_id': 4,  # –û—Ç–µ–ª–∏
                'status': 'approved'
            },
            {
                'title': 'üöÅ –≠–∫—Å–∫—É—Ä—Å–∏–∏ "–ù–µ–±–µ—Å–Ω—ã–µ –í–∏–¥—ã"',
                'description': '–í–µ—Ä—Ç–æ–ª–µ—Ç–Ω—ã–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –Ω–∞–¥ –ù—è—á–∞–Ω–≥–æ–º. –§–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Ç—É—Ä—ã.',
                'address': '–ê—ç—Ä–æ–ø–æ—Ä—Ç –ö–∞–º—Ä–∞–Ω—å, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 567 890',
                'discount_text': '–°–∫–∏–¥–∫–∞ 10% –¥–ª—è –≥—Ä—É–ø–ø –æ—Ç 4 —á–µ–ª–æ–≤–µ–∫',
                'category_id': 5,  # –≠–∫—Å–∫—É—Ä—Å–∏–∏
                'status': 'approved'
            },
            {
                'title': 'üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω "–°—É–≤–µ–Ω–∏—Ä—ã –í—å–µ—Ç–Ω–∞–º–∞"',
                'description': '–ê—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–µ —Å—É–≤–µ–Ω–∏—Ä—ã –∏ –ø–æ–¥–∞—Ä–∫–∏. –ö–æ—Ñ–µ, —á–∞–π, –∏–∑–¥–µ–ª–∏—è —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã.',
                'address': '—É–ª. –ù–≥—É–µ–Ω –¢—Ö–∏ –ú–∏–Ω—å –ö—Ö–∞–π, 654, –ù—è—á–∞–Ω–≥',
                'contact': '+84 258 678 901',
                'discount_text': '–°–∫–∏–¥–∫–∞ 25% –Ω–∞ –≤–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç',
                'category_id': 6,  # –ú–∞–≥–∞–∑–∏–Ω—ã
                'status': 'approved'
            }
        ]
        
        added_cards = []
        for card_data in test_cards:
            card = Card(
                id=None,
                partner_id=test_partner.id,
                category_id=card_data['category_id'],
                title=card_data['title'],
                description=card_data['description'],
                address=card_data['address'],
                contact=card_data['contact'],
                discount_text=card_data['discount_text'],
                status=card_data['status']
            )
            
            card_id = db_v2.create_card(card)
            added_cards.append(card_id)
            logger.info(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ID={card_id}, Title={card.title}")
        
        logger.info(f"üéâ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(added_cards)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
        category_slugs = ['restaurants', 'spa', 'transport', 'hotels', 'tours', 'shops']
        for slug in category_slugs:
            cards = db_v2.get_cards_by_category(slug, status='approved')
            logger.info(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏—è {slug}: {len(cards)} –∫–∞—Ä—Ç–æ—á–µ–∫")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    
    success = await add_test_cards()
    
    if success:
        logger.info("üéâ –¢–ï–°–¢–û–í–´–ï –ö–ê–†–¢–û–ß–ö–ò –î–û–ë–ê–í–õ–ï–ù–´!")
        logger.info("‚úÖ –¢–µ–ø–µ—Ä—å –∫–∞—Ç–∞–ª–æ–≥ –Ω–µ –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º")
        logger.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç –≤—ã–±–∏—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    else:
        logger.error("‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –î–û–ë–ê–í–ò–¢–¨ –ö–ê–†–¢–û–ß–ö–ò")
    
    return success

if __name__ == "__main__":
    asyncio.run(main())
