"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
"""
from typing import List, Dict, Any
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

router = Router(name="history")

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –ë–î)
MOCK_HISTORY = [
    {"id": i, "date": f"2023-01-{i:02d}", "amount": i*100, "type": "–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ" if i % 2 else "–°–ø–∏—Å–∞–Ω–∏–µ"}
    for i in range(1, 21)
]

ITEMS_PER_PAGE = 5

def get_history_page(page: int = 1) -> tuple[str, InlineKeyboardMarkup]:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å—Ç–æ—Ä–∏–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    start = (page - 1) * ITEMS_PER_PAGE
    end = start + ITEMS_PER_PAGE
    page_items = MOCK_HISTORY[start:end]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = f"üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page}):\n\n"
    for item in page_items:
        text += f"{item['date']}: {item['type']} {item['amount']} –±–∞–ª–ª–æ–≤\n"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    kb = []
    if page > 1:
        kb.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"history_page_{page-1}"))
    if end < len(MOCK_HISTORY):
        kb.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"history_page_{page+1}"))
    
    reply_markup = InlineKeyboardMarkup(inline_keyboard=[kb]) if kb else None
    
    return text, reply_markup

@router.message(F.text == "üìú –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π")
async def show_history(message: Message):
    """–ü–æ–∫–∞–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å—Ç–æ—Ä–∏–∏"""
    text, reply_markup = get_history_page(1)
    await message.answer(text, reply_markup=reply_markup)

@router.callback_query(F.data.startswith("history_page_"))
async def handle_history_pagination(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –∏—Å—Ç–æ—Ä–∏–∏"""
    try:
        page = int(callback.data.split("_")[2])
        text, reply_markup = get_history_page(page)
        await callback.message.edit_text(text, reply_markup=reply_markup)
    except (IndexError, ValueError):
        await callback.answer("–û—à–∏–±–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏")
    await callback.answer()
