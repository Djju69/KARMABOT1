#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway
"""
import os
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_railway_variables():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Railway"""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Railway...")
    
    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    required_vars = [
        'BOT_TOKEN',
        'ADMIN_ID', 
        'SECRET_KEY',
        'JWT_SECRET_KEY',
        'DATABASE_URL',
        'REDIS_URL',
        'PORT'
    ]
    
    # Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    railway_vars = [
        'RAILWAY_ENVIRONMENT',
        'RAILWAY_STATIC_URL',
        'PORT'
    ]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    bot_vars = [
        'DISABLE_POLLING',
        'WEBHOOK_URL'
    ]
    
    # Feature flags
    feature_vars = [
        'FEATURE_QR_WEBAPP',
        'FEATURE_PARTNER_FSM',
        'FEATURE_NEW_MENU',
        'FEATURE_MODERATION',
        'FEATURE_LISTEN_NOTIFY'
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    logger.info("\nüìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:")
    missing_required = []
    for var in required_vars:
        value = os.getenv(var)
        if value:
            logger.info(f"‚úÖ {var}: {'*' * min(len(value), 10)}...")
        else:
            logger.error(f"‚ùå {var}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
            missing_required.append(var)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    logger.info("\nüöÇ RAILWAY –ü–ï–†–ï–ú–ï–ù–ù–´–ï:")
    for var in railway_vars:
        value = os.getenv(var)
        if value:
            logger.info(f"‚úÖ {var}: {value}")
        else:
            logger.warning(f"‚ö†Ô∏è {var}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    logger.info("\nü§ñ –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê:")
    for var in bot_vars:
        value = os.getenv(var)
        if value:
            logger.info(f"‚úÖ {var}: {value}")
        else:
            logger.warning(f"‚ö†Ô∏è {var}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º feature flags
    logger.info("\nüéõÔ∏è FEATURE FLAGS:")
    for var in feature_vars:
        value = os.getenv(var)
        if value:
            logger.info(f"‚úÖ {var}: {value}")
        else:
            logger.warning(f"‚ö†Ô∏è {var}: –ù–ï –ù–ê–ô–î–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    logger.info("\nüö® –ü–†–û–ë–õ–ï–ú–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø:")
    problems = []
    
    disable_polling = os.getenv('DISABLE_POLLING')
    if disable_polling == '0':
        problems.append("DISABLE_POLLING=0 (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å true –¥–ª—è Railway)")
    
    qr_webapp = os.getenv('FEATURE_QR_WEBAPP')
    if qr_webapp == '1':
        problems.append("FEATURE_QR_WEBAPP=1 (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å true)")
    
    if problems:
        for problem in problems:
            logger.error(f"‚ùå {problem}")
    else:
        logger.info("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    logger.info(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
    logger.info(f"–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: {len(required_vars) - len(missing_required)}/{len(required_vars)}")
    logger.info(f"–ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {len(problems)}")
    
    if missing_required:
        logger.error(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_required)}")
        return False
    elif problems:
        logger.warning(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: {len(problems)}")
        return False
    else:
        logger.info("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True

if __name__ == "__main__":
    check_railway_variables()
