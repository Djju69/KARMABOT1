"""
–¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""
import pytest
import os
import tempfile
import sqlite3
from pathlib import Path

def test_tariff_migration_sqlite():
    """–¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è SQLite"""
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ë–î
    with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as tmp_db:
        db_path = tmp_db.name
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        conn = sqlite3.connect(db_path)
        cur = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –º–∏–≥—Ä–∞—Ü–∏–π
        cur.execute("""
            CREATE TABLE IF NOT EXISTS migrations (
                version TEXT PRIMARY KEY,
                description TEXT,
                applied_at TEXT DEFAULT (datetime('now'))
            )
        """)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Ç–∞—Ä–∏—Ñ–æ–≤
        cur.execute("""
            CREATE TABLE IF NOT EXISTS partner_tariffs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL UNIQUE,
                tariff_type TEXT NOT NULL UNIQUE,
                price_vnd INTEGER NOT NULL DEFAULT 0,
                max_transactions_per_month INTEGER NOT NULL DEFAULT 15,
                commission_rate REAL NOT NULL DEFAULT 0.1200,
                analytics_enabled INTEGER NOT NULL DEFAULT 0,
                priority_support INTEGER NOT NULL DEFAULT 0,
                api_access INTEGER NOT NULL DEFAULT 0,
                custom_integrations INTEGER NOT NULL DEFAULT 0,
                dedicated_manager INTEGER NOT NULL DEFAULT 0,
                description TEXT,
                is_active INTEGER NOT NULL DEFAULT 1,
                created_at TEXT DEFAULT (datetime('now')),
                updated_at TEXT DEFAULT (datetime('now'))
            )
        """)
        
        cur.execute("""
            CREATE TABLE IF NOT EXISTS partner_tariff_subscriptions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                partner_id INTEGER NOT NULL,
                tariff_id INTEGER NOT NULL REFERENCES partner_tariffs(id),
                started_at TEXT NOT NULL DEFAULT (datetime('now')),
                expires_at TEXT,
                is_active INTEGER NOT NULL DEFAULT 1,
                auto_renew INTEGER NOT NULL DEFAULT 0,
                payment_status TEXT DEFAULT 'pending',
                created_at TEXT DEFAULT (datetime('now')),
                updated_at TEXT DEFAULT (datetime('now')),
                UNIQUE(partner_id, is_active) DEFERRABLE INITIALLY DEFERRED
            )
        """)
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
        cur.execute("""
            INSERT OR REPLACE INTO partner_tariffs (
                name, tariff_type, price_vnd, max_transactions_per_month, 
                commission_rate, analytics_enabled, priority_support, 
                api_access, custom_integrations, dedicated_manager, description
            ) VALUES 
            ('FREE STARTER', 'free_starter', 0, 15, 0.1200, 0, 0, 0, 0, 0, '–ë–∞–∑–æ–≤—ã–µ –∫–∞—Ä—Ç—ã, QR-–∫–æ–¥—ã, –ª–∏–º–∏—Ç 15 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –º–µ—Å—è—Ü'),
            ('BUSINESS', 'business', 490000, 100, 0.0600, 1, 1, 0, 0, 0, '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –ª–∏–º–∏—Ç 100 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π'),
            ('ENTERPRISE', 'enterprise', 960000, -1, 0.0400, 1, 1, 1, 1, 1, 'API –¥–æ—Å—Ç—É–ø, –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –±–µ–∑–ª–∏–º–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π')
        """)
        
        conn.commit()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞—Ä–∏—Ñ—ã —Å–æ–∑–¥–∞–Ω—ã
        cur.execute("SELECT COUNT(*) FROM partner_tariffs")
        count = cur.fetchone()[0]
        assert count == 3
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
        cur.execute("SELECT name, tariff_type, price_vnd FROM partner_tariffs ORDER BY price_vnd")
        tariffs = cur.fetchall()
        
        assert tariffs[0] == ('FREE STARTER', 'free_starter', 0)
        assert tariffs[1] == ('BUSINESS', 'business', 490000)
        assert tariffs[2] == ('ENTERPRISE', 'enterprise', 960000)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
        cur.execute("SELECT analytics_enabled, api_access, dedicated_manager FROM partner_tariffs WHERE tariff_type = 'enterprise'")
        enterprise_features = cur.fetchone()
        assert enterprise_features == (1, 1, 1)  # –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã
        
        cur.execute("SELECT analytics_enabled, api_access, dedicated_manager FROM partner_tariffs WHERE tariff_type = 'free_starter'")
        free_features = cur.fetchone()
        assert free_features == (0, 0, 0)  # –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
        
        print("‚úÖ SQLite –º–∏–≥—Ä–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        
    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ë–î
        conn.close()
        os.unlink(db_path)

def test_tariff_models_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π —Ç–∞—Ä–∏—Ñ–æ–≤"""
    try:
        from core.models.tariff_models import Tariff, TariffType, TariffFeatures, DEFAULT_TARIFFS
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –º–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è
        assert Tariff is not None
        assert TariffType is not None
        assert TariffFeatures is not None
        assert DEFAULT_TARIFFS is not None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
        assert len(DEFAULT_TARIFFS) == 3
        assert TariffType.FREE_STARTER in DEFAULT_TARIFFS
        assert TariffType.BUSINESS in DEFAULT_TARIFFS
        assert TariffType.ENTERPRISE in DEFAULT_TARIFFS
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π —Ç–∞—Ä–∏—Ñ–æ–≤ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
        
    except ImportError as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")

def test_tariff_service_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ç–∞—Ä–∏—Ñ–æ–≤"""
    try:
        from core.services.tariff_service import TariffService, tariff_service
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
        assert TariffService is not None
        assert tariff_service is not None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞
        service = TariffService()
        assert service.default_tariffs is not None
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
        
    except ImportError as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")

def test_tariff_admin_router_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∞–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤"""
    try:
        from core.handlers.tariff_admin_router import router
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–æ—É—Ç–µ—Ä –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
        assert router is not None
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ")
        
    except ImportError as e:
        pytest.fail(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∞–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    test_tariff_migration_sqlite()
    test_tariff_models_import()
    test_tariff_service_import()
    test_tariff_admin_router_import()
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
