#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Redis –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –±–æ—Ç–∞
"""
import os
import redis
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def clear_redis_locks():
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –≤ Redis"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis
        redis_url = os.getenv('REDIS_URL', 'redis://localhost:6379')
        r = redis.from_url(redis_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        r.ping()
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ")
        
        # –ò—â–µ–º –≤—Å–µ –∫–ª—é—á–∏ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
        lock_keys = r.keys('*:bot:*:polling:leader')
        logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: {len(lock_keys)}")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        if lock_keys:
            deleted = r.delete(*lock_keys)
            logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: {deleted}")
        else:
            logger.info("‚ÑπÔ∏è –ë–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        # –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        other_locks = r.keys('*lock*')
        if other_locks:
            deleted = r.delete(*other_locks)
            logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫: {deleted}")
            
        logger.info("‚úÖ –û—á–∏—Å—Ç–∫–∞ Redis –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Redis: {e}")
        return False

if __name__ == "__main__":
    success = clear_redis_locks()
    if success:
        print("‚úÖ Redis –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ—á–∏—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ Redis –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫")
