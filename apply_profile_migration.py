#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""
import sqlite3
import os
import sys
from pathlib import Path

def apply_migration():
    """–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = "core/database/karmabot.db"
        
        if not os.path.exists(db_path):
            print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
            return False
        
        # –ß–∏—Ç–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        migration_file = "migrations/014_user_profile_system.sql"
        if not os.path.exists(migration_file):
            print(f"‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {migration_file}")
            return False
        
        with open(migration_file, 'r', encoding='utf-8') as f:
            migration_sql = f.read()
        
        print("üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        cursor.executescript(migration_sql)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name LIKE 'user_%'")
        tables = cursor.fetchall()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
        for table in tables:
            print(f"  - {table[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='index' AND name LIKE 'idx_user_%'")
        indexes = cursor.fetchall()
        
        print("üîç –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã:")
        for index in indexes:
            print(f"  - {index[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='trigger' AND name LIKE '%user%'")
        triggers = cursor.fetchall()
        
        print("‚ö° –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã:")
        for trigger in triggers:
            print(f"  - {trigger[0]}")
        
        conn.commit()
        conn.close()
        
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_profile_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ—Ñ–∏–ª–µ–π...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        sys.path.append('.')
        from core.services.user_profile_service import user_profile_service
        from core.models.user_profile import UserLevel
        
        print("‚úÖ –°–µ—Ä–≤–∏—Å –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"üìä –ü–æ—Ä–æ–≥–∏ —É—Ä–æ–≤–Ω–µ–π: {user_profile_service.level_thresholds}")
        print(f"üéÅ –ë–æ–Ω—É—Å—ã —É—Ä–æ–≤–Ω–µ–π: {user_profile_service.level_bonuses}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–Ω–∏
        print(f"üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: {[level.value for level in UserLevel]}")
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 60)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    if not apply_migration():
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    if not test_profile_system():
        sys.exit(1)
    
    print("\nüéâ –í–°–ï –ì–û–¢–û–í–û!")
    print("üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–æ–¥–µ–ª—å UserProfile —Å —Å–∏—Å—Ç–µ–º–æ–π —É—Ä–æ–≤–Ω–µ–π")
    print("  ‚úÖ –°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–∏—Å UserProfileService")
    print("  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞")
    print("  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è")
    print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    
    print("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("  1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    print("  2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É—Ä–æ–≤–Ω–µ–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π")
    print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥—ã –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ")

if __name__ == "__main__":
    main()
