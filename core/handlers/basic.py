from aiogram.types import Message, CallbackQuery 
from aiogram import Bot
from aiogram.fsm.context import FSMContext

# –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
from core.utils.locales import translations, get_text

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from core.keyboards.inline import select_restoran, regional_restoran, language_keyboard
from core.keyboards.reply_dynamic import get_return_to_main_menu, get_test_restoran, get_main_menu_reply  # –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç

# –¢–µ–∫—Å—Ç—ã
from core.windows.feedback import feedback_text
from core.windows.hiw import hiw_text
from core.windows.regional_rest import regional_restoran_text
from core.windows.Wrongtype import (
    get_hello_text,
    get_photo_text,
    get_photo_text_el,
    get_inline_text,
    get_location_text
)


async def main_menu(message: Message, bot: Bot, state: FSMContext):
    user_data = await state.get_data()
    lang = user_data.get("lang", "ru")
    text = get_text(lang, "main_menu")
    
    # –ù–æ–≤—ã–π –∫–æ–¥ (reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤–Ω–∏–∑—É)
    keyboard = get_main_menu_reply(lang)
    
    await bot.send_message(chat_id=message.chat.id, text=text, reply_markup=keyboard)


async def get_start(message: Message, bot: Bot, state: FSMContext):
    await state.set_data({})  # –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
    await state.update_data(started=True)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ, –Ω–æ —Ç—É—Ç –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    await bot.send_message(
        chat_id=message.chat.id,
        text="üåê Choose your language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Ïñ∏Ïñ¥Î•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî:",
        reply_markup=language_keyboard
    )


async def language_callback(call: CallbackQuery, bot: Bot, state: FSMContext):
    lang = call.data.split("_")[1]  # lang_ru, lang_en, lang_ko
    await state.update_data(lang=lang)

    start_text = get_text(lang, "start")
    main_text = get_text(lang, "main_menu")
    keyboard = select_restoran  # inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é

    full_text = f"{start_text}\n\n{main_text}"

    try:
        await call.message.edit_text(full_text, reply_markup=keyboard)
    except Exception:
        await bot.send_message(chat_id=call.message.chat.id, text=full_text, reply_markup=keyboard)
    await call.answer()


# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def main_menu_callback(call: CallbackQuery, bot: Bot, state: FSMContext):
    data = call.data

    if data == "show_categories":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=None)  # –∑–∞–≥–ª—É—à–∫–∞
        # TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—ã–∑–æ–≤ show_categories
    elif data == "rests_by_district":
        lang = (await state.get_data()).get("lang", "ru")
        text = get_text(lang, "choose_district") or "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω:"
        await call.message.edit_text(text, reply_markup=regional_restoran)
    elif data == "rest_near_me":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö ‚Äî –∑–∞–≥–ª—É—à–∫–∞, –ø–æ—Ç–æ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤
        await call.message.edit_text("–ü–æ–∫–∞–∑—ã–≤–∞—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Ä—è–¥–æ–º —Å –≤–∞–º–∏...")
    elif data == "change_language":
        await call.message.edit_text(
            "üåê Choose your language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Ïñ∏Ïñ¥Î•º ÏÑ†ÌÉùÌïòÏÑ∏Ïöî:",
            reply_markup=language_keyboard
        )
    elif data == "back_to_main":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ callback
        message = call.message
        await main_menu(message, bot, state)
    else:
        await call.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞", show_alert=True)

    await call.answer()


async def hiw_user(message: Message, bot: Bot, state: FSMContext):
    lang = (await state.get_data()).get("lang", "ru")
    keyboard = get_return_to_main_menu(lang)
    await bot.send_message(chat_id=message.chat.id, text=hiw_text, reply_markup=keyboard)


async def feedback_user(message: Message, bot: Bot, state: FSMContext):
    lang = (await state.get_data()).get("lang", "ru")
    keyboard = get_return_to_main_menu(lang)
    await bot.send_message(chat_id=message.chat.id, text=feedback_text, reply_markup=keyboard)


async def get_inline(message: Message, bot: Bot, state: FSMContext):
    await bot.send_message(chat_id=message.chat.id, text=get_inline_text, reply_markup=select_restoran)


async def user_regional_rest(message: Message, bot: Bot, state: FSMContext):
    await bot.send_message(chat_id=message.chat.id, text=regional_restoran_text, reply_markup=regional_restoran)


async def get_hello(message: Message, bot: Bot, state: FSMContext):
    await message.answer(text=get_hello_text)
    await main_menu(message, bot, state)


async def get_photo(message: Message, bot: Bot, state: FSMContext):
    text = get_photo_text if message.photo else get_photo_text_el
    await message.answer(text=text)
    await main_menu(message, bot, state)


async def get_video(message: Message, bot: Bot, state: FSMContext):
    if message.video:
        await message.answer(text=get_photo_text)
    await main_menu(message, bot, state)


async def get_file(message: Message, bot: Bot, state: FSMContext):
    if message.animation:
        await message.answer(text=get_photo_text)
    await main_menu(message, bot, state)


async def get_location(message: Message, bot: Bot, state: FSMContext):
    await message.answer(text=get_location_text)
    await main_menu(message, bot, state)


async def on_language_select(callback_query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    from aiogram.types import CallbackQuery
    
    if isinstance(callback_query, CallbackQuery):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        selected_lang = callback_query.data.replace('lang_', '')
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
        await callback_query.message.edit_text(
            f"–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {selected_lang}",
            reply_markup=None
        )
        await callback_query.answer()
    else:
        # –ü–æ–∫–∞–∑ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        from core.keyboards.language import get_language_keyboard
        await callback_query.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=get_language_keyboard())
