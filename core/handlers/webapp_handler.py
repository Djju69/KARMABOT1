"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ WebApp –¥–∞–Ω–Ω—ã—Ö –æ—Ç Telegram
"""

import json
import logging
from aiogram import Router, F
from aiogram.types import WebAppData, Message
from aiogram.fsm.context import FSMContext

from core.handlers.profile import on_my_cards, on_my_points, on_become_partner
from core.handlers.main_menu_router import show_categories_v2
from core.keyboards.reply_v2 import get_profile_settings_keyboard
from core.services.profile_service import profile_service

logger = logging.getLogger(__name__)

webapp_router = Router()

@webapp_router.message(F.web_app_data)
async def handle_webapp_data(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç WebApp"""
    try:
        webapp_data = message.web_app_data
        logger.info(f"üîç WebApp data received: {webapp_data.data} from user {message.from_user.id}")
        
        data = json.loads(webapp_data.data)
        action = data.get('action')
        
        logger.info(f"üéØ WebApp action: {action} from user {message.from_user.id}")
        
        if action == 'cards' or action == 'my_cards':
            logger.info("üéØ Processing my_cards action")
            await on_my_cards(message)
        elif action == 'points' or action == 'my_points':
            logger.info("üéØ Processing my_points action")
            await on_my_points(message)
        elif action == 'catalog':
            logger.info("üéØ Processing catalog action")
            await show_categories_v2(message)
        elif action == 'partner' or action == 'become_partner':
            logger.info("üéØ Processing become_partner action")
            await on_become_partner(message, state)
        elif action == 'karma' or action == 'my_karma':
            logger.info("üéØ Processing my_karma action")
            await message.answer(
                "üìä <b>–ú–æ—è –∫–∞—Ä–º–∞</b>\n\n"
                "üí∞ <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> 150 –±–∞–ª–ª–æ–≤\n"
                "üìà <b>–£—Ä–æ–≤–µ–Ω—å:</b> 3 (–ù–æ–≤–∏—á–æ–∫)\n"
                "üéØ <b>–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è:</b> 50 –±–∞–ª–ª–æ–≤\n\n"
                "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                "‚Ä¢ –î–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: 15\n"
                "‚Ä¢ –ö–∞—Ä—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–æ: 3\n"
                "‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: 1",
                parse_mode="HTML"
            )
        elif action == 'achievements':
            logger.info("üéØ Processing achievements action")
            await message.answer(
                "üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>\n\n"
                "‚úÖ <b>–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ:</b>\n"
                "‚Ä¢ –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏ - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å\n"
                "‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä - –ü—Ä–∏–≤—è–∑–∞–ª–∏ –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É\n"
                "‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç - 10 –¥–Ω–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ\n\n"
                "üîí <b>–í –ø—Ä–æ—Ü–µ—Å—Å–µ:</b>\n"
                "‚Ä¢ –ú–∞—Å—Ç–µ—Ä –∫–∞—Ä—Ç - –ü—Ä–∏–≤—è–∑–∞—Ç—å 5 –∫–∞—Ä—Ç (3/5)\n"
                "‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã–π - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3 –¥—Ä—É–∑–µ–π (1/3)",
                parse_mode="HTML"
            )
        elif action == 'history':
            logger.info("üéØ Processing history action")
            await message.answer(
                "üìã <b>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</b>\n\n"
                "üìÖ <b>–°–µ–≥–æ–¥–Ω—è:</b>\n"
                "‚Ä¢ +5 –±–∞–ª–ª–æ–≤ - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n"
                "‚Ä¢ +25 –±–∞–ª–ª–æ–≤ - –ü—Ä–∏–≤—è–∑–∫–∞ –∫–∞—Ä—Ç—ã KS-1234-5678\n\n"
                "üìÖ <b>–í—á–µ—Ä–∞:</b>\n"
                "‚Ä¢ +5 –±–∞–ª–ª–æ–≤ - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n"
                "‚Ä¢ +10 –±–∞–ª–ª–æ–≤ - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–æ—Ç–µ\n\n"
                "üìÖ <b>–ü–æ–∑–∞–≤—á–µ—Ä–∞:</b>\n"
                "‚Ä¢ +5 –±–∞–ª–ª–æ–≤ - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å",
                parse_mode="HTML"
            )
        elif action == 'notifications':
            logger.info("üéØ Processing notifications action")
            lang = await profile_service.get_lang(message.from_user.id)
            await message.answer(
                "üîî <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:",
                parse_mode="HTML",
                reply_markup=get_profile_settings_keyboard(lang)
            )
        elif action == 'language':
            logger.info("üéØ Processing language action")
            await message.answer(
                "üåê <b>–í—ã–±–æ—Ä —è–∑—ã–∫–∞</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:",
                parse_mode="HTML"
            )
        elif action == 'help':
            logger.info("üéØ Processing help action")
            await message.answer(
                "‚ùì <b>–ü–æ–º–æ—â—å</b>\n\n"
                "ü§ñ <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
                "‚Ä¢ –ü—Ä–∏–≤—è–∑–∫–∞ –∫–∞—Ä—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫\n"
                "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n"
                "‚Ä¢ –ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
                "‚Ä¢ –°—Ç–∞—Ç—É—Å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞\n\n"
                "üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>\n"
                "‚Ä¢ Telegram: @karmabot_support\n"
                "‚Ä¢ Email: support@karmabot.ru\n"
                "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67",
                parse_mode="HTML"
            )
        else:
            logger.warning(f"‚ùì Unknown WebApp action: {action}")
            await message.answer(f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {action}")
            
    except json.JSONDecodeError:
        logger.error(f"Invalid JSON in WebApp data: {webapp_data.data}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        logger.error(f"Error handling WebApp data: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
