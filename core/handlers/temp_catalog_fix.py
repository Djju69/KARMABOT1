"""
–í—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
"""
import logging
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from core.database.migrations import diagnose_and_fix_catalog

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
temp_router = Router()

@temp_router.message(Command("fix_catalog"))
async def cmd_fix_catalog(message: Message):
    """–í–†–ï–ú–ï–ù–ù–ê–Ø –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    if message.from_user.id != 6391215556:
        await message.reply("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
        
    await message.reply("üîß –ù–∞—á–∏–Ω–∞—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        await diagnose_and_fix_catalog()
        
        await message.reply("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–æ—Ç–µ.")
        logger.info("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /fix_catalog –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}"
        await message.reply(error_msg)
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /fix_catalog: {e}")

@temp_router.message(Command("catalog_status"))
async def cmd_catalog_status(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    if message.from_user.id != 6391215556:
        await message.reply("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
        
    await message.reply("üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –∫–∞—Ç–∞–ª–æ–≥–∞...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –±–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        await diagnose_and_fix_catalog()
        
        await message.reply("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.")
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: {e}"
        await message.reply(error_msg)
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /catalog_status: {e}")
