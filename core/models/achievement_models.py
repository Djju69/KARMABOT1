"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Å –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
"""
from enum import Enum
from dataclasses import dataclass
from typing import Dict, Any, List, Optional
from datetime import datetime

class AchievementType(Enum):
    """–¢–∏–ø—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    # –ë–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    LEVEL_UP = "level_up"
    KARMA_MILESTONE = "karma_milestone"
    
    # –ù–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
    DAILY_STREAK = "daily_streak"  # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –≤—Ö–æ–¥—ã –ø–æ–¥—Ä—è–¥
    REFERRAL_MASTER = "referral_master"  # –ú–∞—Å—Ç–µ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    CARD_COLLECTOR = "card_collector"  # –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –∫–∞—Ä—Ç
    EXPLORER = "explorer"  # –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å (–ø–æ—Å–µ—â–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç)
    SOCIAL_BUTTERFLY = "social_butterfly"  # –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞
    LOYALTY_CHAMPION = "loyalty_champion"  # –ß–µ–º–ø–∏–æ–Ω –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
    SPEED_DEMON = "speed_demon"  # –°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –¥–µ–º–æ–Ω
    PERFECTIONIST = "perfectionist"  # –ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç
    EARLY_BIRD = "early_bird"  # –†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞
    NIGHT_OWL = "night_owl"  # –ù–æ—á–Ω–∞—è —Å–æ–≤–∞
    WEEKEND_WARRIOR = "weekend_warrior"  # –í–æ–∏–Ω –≤—ã—Ö–æ–¥–Ω—ã—Ö
    MONTHLY_CHALLENGER = "monthly_challenger"  # –ú–µ—Å—è—á–Ω—ã–π –≤—ã–∑–æ–≤
    YEARLY_LEGEND = "yearly_legend"  # –ì–æ–¥–æ–≤–∞—è –ª–µ–≥–µ–Ω–¥–∞

class AchievementRarity(Enum):
    """–†–µ–¥–∫–æ—Å—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    COMMON = "common"  # –û–±—ã—á–Ω–æ–µ
    RARE = "rare"  # –†–µ–¥–∫–æ–µ
    EPIC = "epic"  # –≠–ø–∏—á–µ—Å–∫–æ–µ
    LEGENDARY = "legendary"  # –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ

@dataclass
class Achievement:
    """–ú–æ–¥–µ–ª—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
    id: Optional[int]
    achievement_type: AchievementType
    name: str
    description: str
    icon: str
    rarity: AchievementRarity
    points_reward: int
    requirements: Dict[str, Any]
    is_active: bool = True
    created_at: Optional[datetime] = None

@dataclass
class UserAchievement:
    """–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    id: Optional[int]
    user_id: int
    achievement_type: AchievementType
    achievement_data: Dict[str, Any]
    earned_at: datetime
    is_notified: bool = False

# –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
DEFAULT_ACHIEVEMENTS = {
    # –£—Ä–æ–≤–Ω–µ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.LEVEL_UP: Achievement(
        id=None,
        achievement_type=AchievementType.LEVEL_UP,
        name="–ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è",
        description="–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è",
        icon="üìà",
        rarity=AchievementRarity.COMMON,
        points_reward=10,
        requirements={"level": 1}
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–∞—Ä–º—ã
    AchievementType.KARMA_MILESTONE: Achievement(
        id=None,
        achievement_type=AchievementType.KARMA_MILESTONE,
        name="–ú–∞—Å—Ç–µ—Ä –∫–∞—Ä–º—ã",
        description="–ù–∞–∫–æ–ø–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä–º—ã",
        icon="üíé",
        rarity=AchievementRarity.RARE,
        points_reward=50,
        requirements={"karma": 1000}
    ),
    
    # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.DAILY_STREAK: Achievement(
        id=None,
        achievement_type=AchievementType.DAILY_STREAK,
        name="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤–æ–∏–Ω",
        description="–í—Ö–æ–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–¥—Ä—è–¥",
        icon="üî•",
        rarity=AchievementRarity.COMMON,
        points_reward=25,
        requirements={"days": 7}
    ),
    
    # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.REFERRAL_MASTER: Achievement(
        id=None,
        achievement_type=AchievementType.REFERRAL_MASTER,
        name="–ú–∞—Å—Ç–µ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤",
        description="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π",
        icon="üë•",
        rarity=AchievementRarity.EPIC,
        points_reward=100,
        requirements={"referrals": 10}
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–∞—Ä—Ç
    AchievementType.CARD_COLLECTOR: Achievement(
        id=None,
        achievement_type=AchievementType.CARD_COLLECTOR,
        name="–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä –∫–∞—Ä—Ç",
        description="–î–æ–±–∞–≤—å—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç",
        icon="üí≥",
        rarity=AchievementRarity.RARE,
        points_reward=75,
        requirements={"cards": 5}
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    AchievementType.EXPLORER: Achievement(
        id=None,
        achievement_type=AchievementType.EXPLORER,
        name="–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
        description="–ü–æ—Å–µ—Ç–∏—Ç–µ —Ä–∞–∑–Ω—ã–µ –º–µ—Å—Ç–∞",
        icon="üó∫Ô∏è",
        rarity=AchievementRarity.RARE,
        points_reward=60,
        requirements={"places": 10}
    ),
    
    # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.SOCIAL_BUTTERFLY: Achievement(
        id=None,
        achievement_type=AchievementType.SOCIAL_BUTTERFLY,
        name="–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞",
        description="–ê–∫—Ç–∏–≤–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å —Å–∏—Å—Ç–µ–º–æ–π",
        icon="ü¶ã",
        rarity=AchievementRarity.EPIC,
        points_reward=80,
        requirements={"interactions": 100}
    ),
    
    # –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
    AchievementType.LOYALTY_CHAMPION: Achievement(
        id=None,
        achievement_type=AchievementType.LOYALTY_CHAMPION,
        name="–ß–µ–º–ø–∏–æ–Ω –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏",
        description="–ù–∞–∫–æ–ø–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏",
        icon="üèÜ",
        rarity=AchievementRarity.LEGENDARY,
        points_reward=200,
        requirements={"loyalty_points": 5000}
    ),
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.EARLY_BIRD: Achievement(
        id=None,
        achievement_type=AchievementType.EARLY_BIRD,
        name="–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞",
        description="–í—Ö–æ–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–æ —É—Ç—Ä–æ–º",
        icon="üåÖ",
        rarity=AchievementRarity.COMMON,
        points_reward=15,
        requirements={"time_range": "06:00-09:00", "days": 5}
    ),
    
    AchievementType.NIGHT_OWL: Achievement(
        id=None,
        achievement_type=AchievementType.NIGHT_OWL,
        name="–ù–æ—á–Ω–∞—è —Å–æ–≤–∞",
        description="–í—Ö–æ–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–∑–¥–Ω–æ –≤–µ—á–µ—Ä–æ–º",
        icon="ü¶â",
        rarity=AchievementRarity.COMMON,
        points_reward=15,
        requirements={"time_range": "22:00-02:00", "days": 5}
    ),
    
    # –ù–µ–¥–µ–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.WEEKEND_WARRIOR: Achievement(
        id=None,
        achievement_type=AchievementType.WEEKEND_WARRIOR,
        name="–í–æ–∏–Ω –≤—ã—Ö–æ–¥–Ω—ã—Ö",
        description="–ê–∫—Ç–∏–≤–Ω—ã –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏",
        icon="‚öîÔ∏è",
        rarity=AchievementRarity.RARE,
        points_reward=40,
        requirements={"weekend_days": 4}
    ),
    
    # –ú–µ—Å—è—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.MONTHLY_CHALLENGER: Achievement(
        id=None,
        achievement_type=AchievementType.MONTHLY_CHALLENGER,
        name="–ú–µ—Å—è—á–Ω—ã–π –≤—ã–∑–æ–≤",
        description="–ê–∫—Ç–∏–≤–Ω—ã –≤–µ—Å—å –º–µ—Å—è—Ü",
        icon="üìÖ",
        rarity=AchievementRarity.EPIC,
        points_reward=150,
        requirements={"days_in_month": 25}
    ),
    
    # –ì–æ–¥–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    AchievementType.YEARLY_LEGEND: Achievement(
        id=None,
        achievement_type=AchievementType.YEARLY_LEGEND,
        name="–ì–æ–¥–æ–≤–∞—è –ª–µ–≥–µ–Ω–¥–∞",
        description="–ê–∫—Ç–∏–≤–Ω—ã –≤–µ—Å—å –≥–æ–¥",
        icon="üëë",
        rarity=AchievementRarity.LEGENDARY,
        points_reward=500,
        requirements={"days_in_year": 300}
    )
}

# –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π
RARITY_COLORS = {
    AchievementRarity.COMMON: "‚ö™",  # –ë–µ–ª—ã–π
    AchievementRarity.RARE: "üîµ",    # –°–∏–Ω–∏–π
    AchievementRarity.EPIC: "üü£",    # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
    AchievementRarity.LEGENDARY: "üü°"  # –ó–æ–ª–æ—Ç–æ–π
}

# –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
def get_progress_bar(current: int, target: int, length: int = 10) -> str:
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
    if target <= 0:
        return "üü©" * length
    
    progress = min(current / target, 1.0)
    filled = int(progress * length)
    empty = length - filled
    
    return "üü©" * filled + "‚¨ú" * empty

def format_achievement_progress(achievement: Achievement, current: int, target: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
    progress_bar = get_progress_bar(current, target)
    percentage = min(int((current / target) * 100), 100) if target > 0 else 100
    
    return f"{achievement.icon} {achievement.name}\n{progress_bar} {current}/{target} ({percentage}%)"
