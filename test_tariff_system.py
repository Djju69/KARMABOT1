#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""
import sys
import os
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent.parent))

async def test_tariff_system():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
        from core.models.tariff_models import Tariff, TariffType, TariffFeatures, DEFAULT_TARIFFS
        print("‚úÖ –ú–æ–¥–µ–ª–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
        assert len(DEFAULT_TARIFFS) == 3
        print("‚úÖ –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º FREE STARTER
        free_tariff = DEFAULT_TARIFFS[TariffType.FREE_STARTER]
        assert free_tariff.price_vnd == 0
        assert free_tariff.features.max_transactions_per_month == 15
        assert free_tariff.features.commission_rate == 0.12
        print("‚úÖ FREE STARTER —Ç–∞—Ä–∏—Ñ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º BUSINESS
        business_tariff = DEFAULT_TARIFFS[TariffType.BUSINESS]
        assert business_tariff.price_vnd == 490000
        assert business_tariff.features.max_transactions_per_month == 100
        assert business_tariff.features.commission_rate == 0.06
        print("‚úÖ BUSINESS —Ç–∞—Ä–∏—Ñ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ENTERPRISE
        enterprise_tariff = DEFAULT_TARIFFS[TariffType.ENTERPRISE]
        assert enterprise_tariff.price_vnd == 960000
        assert enterprise_tariff.features.max_transactions_per_month == -1
        assert enterprise_tariff.features.commission_rate == 0.04
        assert enterprise_tariff.features.api_access is True
        print("‚úÖ ENTERPRISE —Ç–∞—Ä–∏—Ñ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        from core.services.tariff_service import TariffService
        print("‚úÖ –°–µ—Ä–≤–∏—Å —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
        service = TariffService()
        assert service.default_tariffs is not None
        print("‚úÖ –°–µ—Ä–≤–∏—Å —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä
        from core.handlers.tariff_admin_router import router
        print("‚úÖ –ê–¥–º–∏–Ω-—Ä–æ—É—Ç–µ—Ä —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_migration_files():
    """–¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
        migration_file = Path("core/database/migrations/021_partner_tariff_system.py")
        if migration_file.exists():
            print("‚úÖ –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ 021 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ 021 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–π
        main_migration_file = Path("core/database/migrations.py")
        if main_migration_file.exists():
            print("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞
            with open(main_migration_file, 'r', encoding='utf-8') as f:
                content = f.read()
                if "migrate_021_partner_tariff_system" in content:
                    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è 021 –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª")
                else:
                    print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è 021 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ")
                    return False
        else:
            print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–æ—É—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ main_v2.py
        main_file = Path("main_v2.py")
        if main_file.exists():
            with open(main_file, 'r', encoding='utf-8') as f:
                content = f.read()
                if "tariff_admin_router" in content:
                    print("‚úÖ –¢–∞—Ä–∏—Ñ–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ main_v2.py")
                else:
                    print("‚ùå –¢–∞—Ä–∏—Ñ–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ main_v2.py")
                    return False
        else:
            print("‚ùå –§–∞–π–ª main_v2.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard_file = Path("core/keyboards/reply_v2.py")
        if keyboard_file.exists():
            with open(keyboard_file, 'r', encoding='utf-8') as f:
                content = f.read()
                if "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞–º–∏" in content:
                    print("‚úÖ –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
                else:
                    print("‚ùå –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ")
                    return False
        else:
            print("‚ùå –§–∞–π–ª –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã KARMABOT1")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    components_ok = await test_tariff_system()
    
    # –¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏
    migration_ok = test_migration_files()
    
    # –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    integration_ok = test_integration()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print(f"–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–∞—Ä–∏—Ñ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {'‚úÖ OK' if components_ok else '‚ùå FAIL'}")
    print(f"–§–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–∏: {'‚úÖ OK' if migration_ok else '‚ùå FAIL'}")
    print(f"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {'‚úÖ OK' if integration_ok else '‚ùå FAIL'}")
    
    if components_ok and migration_ok and integration_ok:
        print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí∞ –¢–∞—Ä–∏—Ñ–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–µ–ø–ª–æ—é!")
        return True
    else:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!")
        print("üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º")
        return False

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)
