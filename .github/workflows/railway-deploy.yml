name: Railway Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    outputs:
      has-secrets: ${{ steps.check-secrets.outputs.has-secrets }}
    steps:
      - name: Check for required secrets
        id: check-secrets
        run: |
          if [ -z "${{ secrets.RAILWAY_TOKEN }}" ]; then
            echo "::error::❌ RAILWAY_TOKEN is not set in repository secrets"
            echo "has-secrets=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          if [ -z "${{ secrets.RAILWAY_PROJECT }}" ]; then
            echo "::warning::⚠️ RAILWAY_PROJECT is not set in repository secrets"
          fi
          echo "has-secrets=true" >> $GITHUB_OUTPUT
          echo "✅ All required secrets are present"

  deploy:
    needs: check-secrets
    if: needs.check-secrets.outputs.has-secrets == 'true'
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_PROJECT: ${{ secrets.RAILWAY_PROJECT }}
      RAILWAY_ENVIRONMENT: ${{ secrets.RAILWAY_ENVIRONMENT || 'main' }}
      REDIS_URL: ${{ secrets.REDIS_URL || '' }}
      ENABLE_POLLING_LEADER_LOCK: ${{ secrets.ENABLE_POLLING_LEADER_LOCK || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Show Railway CLI version
        run: railway --version

      - name: Two-step deploy to Railway (CI)
        run: |
          set -euo pipefail
          echo "Starting two-step Railway deploy..."
          TARGET_PREFIX="railway --ci"
          if [ -n "${RAILWAY_PROJECT:-}" ]; then
            TARGET_PREFIX="$TARGET_PREFIX --project \"$RAILWAY_PROJECT\""
          fi
          if [ -n "${RAILWAY_ENVIRONMENT:-}" ]; then
            TARGET_PREFIX="$TARGET_PREFIX --environment \"$RAILWAY_ENVIRONMENT\""
          fi

          echo "Step 1/2: Empty deploy (DISABLE_POLLING=1)"
          # Ensure Partner FSM is enabled, disable polling
          bash -lc "$TARGET_PREFIX variables set DISABLE_POLLING=1 FEATURE_PARTNER_FSM=true"
          # Optionally set DB/REDIS if provided (no-op if empty)
          if [ -n "${REDIS_URL:-}" ]; then
            bash -lc "$TARGET_PREFIX variables set REDIS_URL=\"$REDIS_URL\""
            railway $FLAGS variables set REDIS_URL="$REDIS_URL"
          fi
          
          # Run initial deployment
          railway $FLAGS up
          
          # Step 2: Final deploy with polling enabled
          echo "Step 2/2: Final deploy with polling enabled"
          railway $FLAGS variables set DISABLE_POLLING=0
          
          if [ -n "$ENABLE_POLLING_LEADER_LOCK" ]; then
            railway $FLAGS variables set ENABLE_POLLING_LEADER_LOCK="$ENABLE_POLLING_LEADER_LOCK"
          fi
          
          # Run final deployment
          railway $FLAGS up
          
          echo "Railway deployment completed successfully"

      - name: Post logs hint
        run: |
          echo "If deploy did not target the right project, set repository secrets:"
          echo "  RAILWAY_TOKEN, RAILWAY_PROJECT, RAILWAY_ENVIRONMENT"
          echo "Optional: REDIS_URL, ENABLE_POLLING_LEADER_LOCK"
